{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/to-do/to-do.component.css","webpack:///./src/app/components/to-do/to-do.component.html","webpack:///./src/app/components/to-do/to-do.component.ts","webpack:///./src/app/services/to-do.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-to-do></app-to-do>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'toDoApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ToDoComponent } from './components/to-do/to-do.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".task-content {\\r\\n  max-width: calc(100% - 60px);\\r\\n}\\r\\n.task-heading {\\r\\n  /* font-weight: bold; */\\r\\n  font-size: 1.1rem;\\r\\n  margin: 0;\\r\\n  padding-left: 10px;\\r\\n}\\r\\n.task-desc {\\r\\n  margin:0;\\r\\n  padding-left: 10px;\\r\\n  padding-top: 2px;\\r\\n  font-size: 0.85rem;\\r\\n  font-weight: lighter;\\r\\n}\\r\\n.task-level {\\r\\n  margin: 0;\\r\\n  padding-left: 10px;\\r\\n  font-size: 0.8rem;\\r\\n  font-weight: lighter;\\r\\n  color: orange;\\r\\n}\\r\\n.swap-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n.swap-btn {\\r\\n  border: none;\\r\\n  background: transparent;\\r\\n  font-size: 20px;\\r\\n}\\r\\n.strike{\\r\\n  text-decoration: line-through;\\r\\n}\\r\\n.clickable{\\r\\n  cursor:pointer;\\r\\n}\\r\\n.level{\\r\\n  float: right;\\r\\n}\\r\\n.taskList{\\r\\n  width: 50%;\\r\\n  margin: auto;\\r\\n}\\r\\n.w3-modal-content{\\r\\n  width: 500px;\\r\\n}\\r\\n.w3-input{\\r\\n  display: inline-block;\\r\\n}\\r\\n/* .w3-bar-item{\\r\\n  width: 100%;\\r\\n} */\\r\\n.fa-plus-circle{\\r\\n  color:green;\\r\\n  font-size: 35px;\\r\\n}\\r\\n\"","module.exports = \"<h2 style=\\\"text-align: center;\\\">Task List</h2>\\n<div class=\\\"w3-container taskList\\\">\\n  <ul class=\\\"w3-ul w3-card-4\\\">\\n    <li\\n      class=\\\"display-flex align-center\\\"\\n      *ngFor=\\\"\\n        let task of allTasks;\\n        let i = index;\\n        let isFirst = first;\\n        let isLast = last\\n      \\\"\\n\\n    >\\n      <div class=\\\"clickable\\\">\\n        <input\\n          type=\\\"checkbox\\\"\\n          class=\\\"w3-check\\\"\\n          name=\\\"task\\\"\\n          [ngModel]=\\\"task.status\\\"\\n          (change)=\\\"updateCompletedTasks(task)\\\"\\n        />\\n      </div>\\n      <div\\n        class=\\\"width-expand task-content clickable\\\"\\n        (click)=\\\"openModal(task)\\\"\\n      >\\n        <h4\\n          class=\\\"task-heading text-truncate\\\"\\n          [ngClass]=\\\"{ strike: task.status }\\\"\\n        >\\n          {{ task.title }}\\n        </h4>\\n        <p class=\\\"task-desc text-truncate\\\" *ngIf=\\\"task.desc\\\">{{ task.desc }}</p>\\n        <p class=\\\"task-level\\\">Level : {{ task.level }}</p>\\n      </div>\\n      <div class=\\\"swap-container\\\">\\n        <button\\n          class=\\\"swap-btn clickable\\\"\\n          (click)=\\\"swapItems(i, i - 1)\\\"\\n          [disabled]=\\\"isFirst\\\"\\n        >\\n          <i class=\\\"fa fa-arrow-circle-up\\\"></i>\\n        </button>\\n        <button\\n          class=\\\"swap-btn clickable\\\"\\n          (click)=\\\"swapItems(i, i + 1)\\\"\\n          [disabled]=\\\"isLast\\\"\\n        >\\n          <i class=\\\"fa fa-arrow-circle-down\\\"></i>\\n        </button>\\n      </div>\\n    </li>\\n\\n    <li class=\\\"w3-bar\\\" (click)=\\\"openModal()\\\">\\n      <div class=\\\"w3-bar-item\\\">\\n        <div class=\\\"w3-large clickable display-flex align-center\\\">\\n          <span class=\\\"fa fa-plus-circle padd-r-10\\\"></span>\\n          <div>Add New Task</div>\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n\\n<div id=\\\"modal\\\" class=\\\"w3-modal w3-block\\\" *ngIf=\\\"modalIsOpen\\\">\\n  <div class=\\\"w3-modal-content w3-card-4\\\">\\n    <header class=\\\"w3-container w3-teal\\\">\\n      <span\\n        (click)=\\\"modalIsOpen = false;\\\"\\n        class=\\\"w3-button w3-display-topright\\\"\\n        >&times;</span\\n      >\\n      <h2>{{ currentTask ? \\\"Edit\\\" : \\\"Create\\\" }} Task</h2>\\n    </header>\\n    <form\\n      class=\\\"w3-container modalText\\\"\\n      name=\\\"creatEditTaskForm\\\"\\n      (ngSubmit)=\\\"saveTask($event)\\\"\\n      #taskForm=\\\"ngForm\\\"\\n    >\\n      <label class=\\\"padd-b-16 w3-block\\\">\\n        Title\\n        <input\\n          type=\\\"text\\\"\\n          class=\\\"w3-input\\\"\\n          name=\\\"taskTitleInput\\\"\\n          [(ngModel)]=\\\"taskTitle\\\"\\n          [required]=\\\"true\\\"\\n          #taskTitleInput=\\\"ngModel\\\"\\n          placeholder=\\\"Enter the title for task\\\"\\n        />\\n      </label>\\n      <div [hidden]=\\\"taskTitleInput?.valid || taskTitleInput?.pristine\\\" class=\\\"alert w3-text-red\\\">\\n        Task Name is required\\n      </div>\\n      <label class=\\\"padd-b-16 w3-block\\\">\\n        Description\\n        <textarea\\n          [(ngModel)]=\\\"taskDesc\\\"\\n          name=\\\"taskDescriptionInput\\\"\\n          class=\\\"w3-block w3-input\\\"\\n          placeholder=\\\"Enter the description\\\"\\n          [required]=\\\"true\\\"\\n          #taskDescriptionInput=\\\"ngModel\\\"\\n        ></textarea>\\n        <div [hidden]=\\\"taskDescriptionInput?.valid || taskDescriptionInput?.pristine\\\" class=\\\"alert w3-text-red\\\">\\n          Task Description is required\\n        </div>\\n      </label>\\n      <label class=\\\"padd-b-16 w3-block\\\">\\n        Level\\n        <select [(ngModel)]=\\\"taskLevel\\\" class=\\\"w3-select\\\" name=\\\"taskLevel\\\">\\n          <option *ngFor=\\\"let level of levels\\\" [ngValue]=\\\"level\\\">{{\\n            level\\n          }}</option>\\n        </select>\\n      </label>\\n      <footer class=\\\"w3-container padd-b-16 text-right\\\">\\n        <button\\n          class=\\\"w3-btn w3-white w3-border w3-border-blue w3-round mar-r-10\\\"\\n          (click)=\\\"$event.preventDefault();reset()\\\"\\n          [hidden]=\\\"taskForm.form.pristine\\\"\\n        >\\n          Reset\\n        </button>\\n        <button\\n          class=\\\"w3-btn w3-white w3-border w3-border-blue w3-round mar-r-10\\\"\\n          type=\\\"submit\\\"\\n          [disabled]=\\\"!taskForm.form.valid\\\"\\n        >\\n          Save\\n        </button>\\n      </footer>\\n    </form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { ITodo } from \"../../../data-model/to-do-model\";\nimport { ToDoService } from \"../../services/to-do.service\";\n\n@Component({\n  selector: \"app-to-do\",\n  templateUrl: \"./to-do.component.html\",\n  styleUrls: [\"./to-do.component.css\"]\n})\nexport class ToDoComponent implements OnInit {\n  allTasks: ITodo[];\n  completedTasks: ITodo[];\n  currentTask: ITodo;\n  taskTitle = \"\";\n  taskLevel = 3;\n  taskDesc = \"\";\n  levels= [1,2,3];\n  modalIsOpen = false;\n  constructor(private toDoService: ToDoService) {}\n\n  ngOnInit() {\n    if (!JSON.parse(localStorage.getItem(\"tasks\"))) {\n      this.allTasks = this.toDoService.setInitialTasks();\n      return;\n    }\n    this.allTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n  }\n\n  openModal(task?: ITodo) {\n    this.modalIsOpen = true;\n    if (!task) {\n      this.currentTask = null;\n      return;\n    }\n    this.currentTask = this.allTasks.find(u => {\n      return u.id == task.id;\n    });\n\n    this.taskTitle = this.currentTask.title;\n    this.taskDesc = this.currentTask.desc;\n    this.taskLevel = this.currentTask.level;\n  }\n\n  updateCompletedTasks(task: ITodo) {\n    // remove task from array\n    task.status = !task.status;\n    let allTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    if (task.status) {\n      // this.remainingTasks.push(task);\n      allTasks = allTasks.filter(item => {\n        return item.id !== task.id;\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(allTasks));\n    } else {\n      allTasks.push(task);\n      localStorage.setItem(\"tasks\", JSON.stringify(allTasks));\n    }\n  }\n\n  saveTask(e) {\n    if (!this.taskTitle || !this.taskLevel || !this.taskDesc) {\n      return;\n    }\n\n    if (this.currentTask) {\n      this.allTasks = this.allTasks.map(u => {\n        if (u.id == this.currentTask.id) {\n          u.title = this.taskTitle;\n          u.level = this.taskLevel;\n          u.desc = this.taskDesc;\n        }\n        return u;\n      });\n    } else {\n      this.currentTask = {\n        id: this.toDoService.generateId(),\n        title: this.taskTitle,\n        status: false,\n        level: this.taskLevel,\n        desc: this.taskDesc\n      };\n      this.allTasks.push(this.currentTask);\n      this.taskDesc = '';\n      this.taskLevel = 3;\n      this.taskTitle = ''\n    }\n\n    localStorage.setItem(\"tasks\", JSON.stringify(this.allTasks));\n    this.modalIsOpen = false;\n  }\n\n  reset() {\n    if(this.currentTask) {\n      this.taskDesc = this.currentTask.desc;\n      this.taskLevel = this.currentTask.level;\n      this.taskTitle = this.currentTask.title\n    } else {\n      this.taskDesc = '';\n      this.taskLevel = 3;\n      this.taskTitle = ''\n    }\n  }\n\n  swapItems(idxToSwap, idxToSwapWith) {\n    if (\n      idxToSwap !== idxToSwapWith &&\n      idxToSwap >= 0 &&\n      idxToSwapWith >= 0 &&\n      idxToSwap < this.allTasks.length &&\n      idxToSwapWith < this.allTasks.length\n    ) {\n      const temp = this.allTasks[idxToSwapWith]\n      this.allTasks[idxToSwapWith] = this.allTasks[idxToSwap]\n      this.allTasks[idxToSwap]  = temp\n      localStorage.setItem(\"tasks\", JSON.stringify(this.allTasks));\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ITodo } from \"../../data-model/to-do-model\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ToDoService {\n  private tasks: ITodo[] = [\n    { title: \"Grocery\", id: \"1\", status: false, level: 3, desc:\"buy grocery\" },\n    { title: \"Shopping\", id: \"2\", status: false, level: 3,  desc:\"buy clothes\"}\n  ];\n\n  constructor() {}\n\n  setInitialTasks() {\n    localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n    return this.tasks;\n  }\n\n  generateId() {\n    return (\n      \"_\" +\n      Math.random()\n        .toString(36)\n        .substr(2, 9)\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}